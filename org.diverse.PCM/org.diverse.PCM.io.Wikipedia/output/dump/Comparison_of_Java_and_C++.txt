c++
java
strongly influenced by c syntax, with object-oriented features added.
strongly influenced by c++/c syntax.
compatible with c source code, except for a few corner case.
provides the java native interface and recently java native access as a way to directly call c/c++ code.
write once, compile anywhere (woca).
write once, run anywhere / everywhere (wora / wore).
allows procedural programming, functional programming, object-oriented programming, generic programming, and template metaprogramming. favors a mix of paradigms.
allows procedural programming, functional programming (since java 8) and generic programming (since java 5), but strongly encourages the object-oriented programming paradigm. includes support for the creation of scripting languages.
runs as native executable machine code for the target instruction set(s).
runs in a virtual machine.
provides object types and type names. allows reflection through rtti.
is reflective, allowing metaprogramming and dynamic code generation at runtime.
has multiple binary compatibility standards (commonly microsoft (for msvc compiler) and itanium/gnu (for virtually all other compilers)).
has a single, os- and compiler-independent binary compatibility standard.
optional automated bounds checking (e.g., the method in and containers).
all operations are required to be bound-checked by all compliant distributions of java. hotspot can remove bounds checking.
supports native unsigned arithmetic.
no native support for unsigned arithmetic.
c++
java






















c++
java
c++
java
c++ is compiled directly to machine code which is then executed directly by the central processing unit.
java is compiled to byte-code which the java virtual machine (jvm) then interprets at runtime. actual java implementations do just-in-time compilation to native machine code. alternatively, the gnu compiler for java can compile directly to machine code.
java/c++ statement
c++ generated code (x86)
java generated byte code
vector[i]++;
mov edx,[ebp+4h] mov eax,[ebp+1ch] inc dword ptr [edx+eax*4]
aload_1 iload_2 dup2 iaload iconst_1 iadd iastore
