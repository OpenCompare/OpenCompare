"Definition","returns character."
"Description","Returns character at index in the string."
"Equivalent","See substring of length 1 character."
"Format","Languages","Base index"
"","ALGOL 68, Pascal, Object Pascal (Delphi), Seed7","1"
"","C, C++, C#, Cobra, D, FreeBASIC, Go, Python, PHP, Ruby, Windows PowerShell, JavaScript, Ya","0"
"","PHP (deprecated in 5.3)","0"
"","Ada","≥1"
"","VB","1"
"","BASIC","1"
"","VB.NET","0"
"","Fortran","1"
"","Java, JavaScript","0"
"","OCaml, F#","0"
"","Standard ML","0"
"","Haskell","0"
"","Scheme","0"
"","Common Lisp","0"
"","ISLISP","0"
"","Clojure","0"
"","Perl","0"
"","PL/I","1"
"","C++ (STL) (w/ bounds checking)","0"
"","Erlang","1"
"","Objective-C ( only)","0"
"","Lua","1"
"","Smalltalk (w/ bounds checking)","1"
"","Tcl","0"
"","Mathematica","1"
"","Eiffel","1"
"","COBOL","1"
"Definition","returns integer."
"Description","Compares two strings to each other.  If they are equivalent, a zero is returned. Otherwise, most of these routines will return a positive or negative result corresponding to whether string is lexicographically greater than, or less than, respectively, than string. The exceptions are the Scheme and REXX routines which return the index of the first mismatch."
"Format","Languages"
"","ALGOL 68"
"","Python (before 3.0 only)"
"","Python (since 3.0)"
"","C, PHP"
"","D"
"","VB, Object Pascal (Delphi)"
"","Perl"
"","Ruby"
"","C++ (STL)"
"","REXX, Seed7"
"","Pascal, Object Pascal (Delphi)"
"","Cobra, Java"
"","VB .NET, C#, F#"
"","Clojure"
"","Common Lisp"
"","Scheme (SRFI 13)"
"","ISLISP"
"","OCaml"
"","Standard ML"
"","Haskell"
"","Windows PowerShell"
"","Objective-C ( only)"
"","Fortran"
"","JavaScript"
"","Go"
"","Tcl"
"","PL/I"
"Definition","OR  returns Boolean."
"Description","Lexicographically compares two strings using a relational operator or function. Boolean result returned."
"Format","Languages"
", where  can be any of  and","Pascal, Object Pascal (Delphi), OCaml, Seed7, Standard ML, BASIC, VB, VB .NET, F#"
", where  can be any of  and ; Also:  and","ALGOL 68"
", where  can be any of  and  (operators starting with '' are case-insensitive)","Scheme"
", where  can be any of  and  (operators starting with '' are case-insensitive)","Scheme (SRFI 13)"
", where  can be any of  and  (the verbal operators are case-insensitive)","Common Lisp"
", where  can be any of  and","ISLISP"
", where  can be any of  and","REXX"
", where  can be any of  and","PL/I"
", where  can be any of  and","Ada"
", where  can be any of  and","Erlang"
", where  can be any of  and","Haskell"
", where  can be any of  and","Perl"
", where  can be any of  and","C++ (STL), C#, D, Go, JavaScript, Python, PHP, Ruby, Ya"
", where  can be any of  and   (operators starting with '' are case-sensitive)","Windows PowerShell"
", where  can be any of  and","Lua"
", where  can be any of  and","Smalltalk"
", where  can be any of  and  and","Fortran."
"where  can be any of  as well as worded equivalents","COBOL"
"where  can be any of  and","Cobra"
"Are available in the syntax, but means comparison of the pointers pointing to the strings, not of the string contents.","C, Java"
"Definition","returns string."
"Description","Concatenates (joins) two strings to each other, returning the combined string. Note that some languages like C have mutable strings, so really the second string is being appended to the first string and the mutated string is returned."
"Format","Languages"
"","Ada, FreeBASIC, Seed7, BASIC, VB, VB .NET, COBOL (between literals only)"
"","C, C++ ( only)"
"","Perl, PHP"
"","ALGOL 68, C++ (STL), C#, Cobra, FreeBASIC, Go, Pascal, Object Pascal (Delphi), Java, JavaScript, Windows PowerShell, Python, Ruby, Rust, F#, Turing, VB, Ya"
"","D"
"","Scheme, ISLISP"
"","Common Lisp"
"","Clojure"
"","REXX, SQL, PL/I"
"","Fortran"
"","Erlang, Haskell"
"","OCaml, Standard ML, F#"
"","Objective-C ( only)"
"","Lua"
"","Smalltalk"
"","SNOBOL"
"","Bash shell"
"","Mathematica"
"Definition","returns boolean"
"Description","Returns whether string contains substring as a substring. This is equivalent to using #Find and then detecting that it does not result in the failure condition listed in the third column of the #Find section. However, some languages have a simpler way of expressing this test."
"Related","/!\ This cell is not defined /!\"
"Format","Languages"
"","ALGOL 68"
"","Object Pascal (Delphi)"
"","C#, VB .NET, Windows PowerShell, F#"
"","Cobra, Java (1.5+)"
"","JavaScript"
"","PHP"
"","Seed7"
"","Cobra, Python (2.3+)"
"","Lua"
"","Ruby"
"","Haskell (GHC 6.6+)"
"","Smalltalk (Squeak, Pharo)"
"","Standard ML"
"","Common Lisp"
"","ISLISP"
"","Clojure"
"","Mathematica"
"","Fortran, PL/I"
"","Go"
"","C++"
"","Objective-C ( only, iOS 8+/OS X 10.10+)"
"Format","Languages"
"","Python, C++ (STL), C#, Cobra, Go, JavaScript (similarity), PHP (similarity), Ruby, Erlang, Haskell, Lua, D, Mathematica, Ya"
"","JavaScript, PHP"
"","Fortran"
"","C"
"","Scheme"
"","Common Lisp, ISLISP"
"","ALGOL 68, Ada, Object Pascal (Delphi), OCaml, Pascal, REXX, Seed7, Standard ML, BASIC, VB, VB .NET, F#, Smalltalk, PL/I, COBOL"
"","Bourne Shell"
"","Perl"
"","Cobra, Java"
"","C#"
"","Windows PowerShell"
"","Objective-C ( only)"
"Definition","returns integer"
"Description","Returns the position of the start of the first occurrence of substring in string. If the substring is not found most of these routines return an invalid index value – -1 where indexes are 0-based, 0 where they are 1-based – or some value to be interpreted as Boolean FALSE."
"Related","instrrev"
"Format","Languages","If not found"
"","ALGOL 68","returns BOOL: TRUE or FALSE, and position in REF INT pos."
"","VB (positions start at 1)","returns 0"
"","BASIC (positions start at 1)","returns 0"
"","AWK","returns 0"
"","Perl","returns -1"
"","FreeBASIC","returns 0"
"","PHP","returns FALSE"
"","Ingres","returns string length + 1"
"","C, C++ ( only, returns pointer to first character)","returns NULL"
"","D","returns -1"
"","Seed7","returns 0"
"","Go","returns -1"
"","Pascal, Object Pascal (Delphi)","returns 0"
"","REXX","returns 0"
"","C++ (STL)","returns std::string::npos"
"","Python","returns -1"
"","Python","raises ValueError"
"","Ruby","returns nil"
"","Java, JavaScript","returns -1"
"","VB .NET, C#, Windows PowerShell, F#","returns -1"
"","Erlang","returns 0"
"","Scheme (SRFI 13)","returns #f"
"","Common Lisp","returns NIL"
"","ISLISP","returns"
"","Haskell (returns Just index)","returns Nothing"
"","OCaml","raises Not_found"
"","Standard ML","returns string length"
"","Objective-C ( only)","returns NSNotFound"
"","Lua","returns nil"
"","Smalltalk (Squeak, Pharo)","evaluate aBlock which is a block closure (or any object understanding value) 
 returns 0"
"","Fortran","returns 0 if substring is not in string; returns LEN(string)+1 if substring is empty"
"","SQL","returns 0 (positions start at 1)"
"","PL/I","returns 0 (positions start at 1)"
"","Cobra","returns -1"
"Definition","returns integer"
"Description","Returns the position of the start of the first occurrence of the character char in string. If the character is not found most of these routines return an invalid index value – -1 where indexes are 0-based, 0 where they are 1-based – or some value to be interpreted as Boolean FALSE. This can be accomplished as a special case of #Find, with a string of one character; but it may be simpler or more efficient in many languages to locate just one character. Also, in many languages, characters and strings are different types, so it is convenient to have such a function."
"Related","find"
"Format","Languages","If not found"
"","ALGOL 68","returns BOOL: TRUE or FALSE, and position in REF INT pos."
"(char, can contain more them one char, in which case the position of the first appearance of any of them is returned.)","FreeBASIC","returns 0"
"","C, C++ ( only, returns pointer to character)","returns NULL"
"","D","returns -1"
"","C++ (STL)","returns std::string::npos"
"","Seed7","returns 0"
"","Go","returns -1"
"","Java, JavaScript","returns -1"
"","VB .NET, C#, Windows PowerShell, F#","returns -1"
"","Common Lisp","returns NIL"
"","ISLISP","returns"
"","Haskell (returns Just index)","returns Nothing"
"","OCaml","raises Not_found"
"","Fortran","returns zero"
"","Smalltalk","evaluate  which is a  (or any object understanding value) 
 returns 0 
 returns  or"
"","PL/I","returns 0 (positions start at 1)"
"","Ruby","returns nil"
"","PHP","returns"
"","Cobra","returns -1"
"Definition","returns string"
"Description","Returns the formatted string representation of one or more items."
"Format","Languages","Format string syntax"
"","ALGOL 68","ALGOL"
"","VB",""
"","Perl, PHP, Ruby","C"
"","Erlang",""
"","C","C"
"","D","C"
"","Object Pascal (Delphi)",""
"","Go","C"
"","Bash shell","C"
"","Python, Ruby","C"
"","Python 3.x",".NET"
"","OCaml, F#","C"
"","Haskell (GHC)","C"
"","Java","C"
"","VB .NET, C#, F#",".NET"
"","Scheme (SRFI 28)","Lisp"
"","Common Lisp","Lisp"
"","Clojure","Lisp"
"","Windows PowerShell",".NET"
"","Objective-C ( only)","C"
"","Lua","C"
"","Fortran","Fortran"
"","PL/I","PL/I (similar to Fortran)"
"","Cobra",".NET"
"Format","Languages"
"","ALGOL 68 - note: the operator ""ne"" is literally in bold type-font."
"","ALGOL 68, Ada, Erlang, Fortran, Haskell"
"","BASIC, VB, VB .NET, Pascal, Object Pascal (Delphi), OCaml, PHP, Seed7, Standard ML, F#, COBOL, Cobra"
"","BASIC (some implementations)"
"","Perl"
"","Scheme (SRFI 13)"
"","Common Lisp"
"","ISLISP"
"","Clojure"
"","C++ (STL), C#, Go, JavaScript (not similar), PHP (not similar), Python, Ruby, D, Mathematica"
"","JavaScript, PHP"
"","REXX"
"","PL/I"
"","Bourne Shell"
"","Windows PowerShell"
"","Lua, Smalltalk"
"Definition","returns a list of strings joined with a separator"
"Description","Joins the list of strings into a new string, with the separator string between each of the substrings. Opposite of split."
"Related","sprintf"
"Format","Languages"
"","D"
"","Erlang"
"","Perl, PHP"
"","PHP"
"","Python"
"","Ruby, JavaScript"
"","Scheme (SRFI 13)"
"","Common Lisp"
"","Clojure"
"","Go"
"","Seed7"
"","OCaml"
"","Standard ML"
"","Haskell (GHC 6.8+)"
"","VB"
"","VB .NET, C#, F#"
"","Windows PowerShell"
"","Objective-C ( only)"
"","Lua"
"","Smalltalk (Squeak, Pharo)"
"","Cobra"
"Definition","returns string"
"Description","Returns the left n part of a string. If n is greater than the length of the string then most implementations return the whole string (exceptions exist - see code examples)."
"Format","Languages"
"","Ada"
"","AWK (changes string), Perl, PHP"
"","BASIC, VB"
"","VB, FreeBASIC, Ingres"
"","C standard library"
"","C++ (STL)"
"","Objective-C ( only)"
"","Clojure"
"","D"
"","Erlang"
"","Common Lisp"
"","Cobra, Go, Python"
"","REXX, Erlang"
"","Ruby"
"","Seed7"
"","VB .NET, C#, Windows PowerShell, F#"
"","Pascal, Object Pascal (Delphi)"
"","Turbo Pascal"
"","Java, JavaScript"
"","Scheme (SRFI 13)"
"","Haskell"
"","Standard ML"
"","OCaml"
"","F#"
"","Lua"
"","Smalltalk (Squeak, Pharo)"
"","Fortran"
"","Mathematica"
"","COBOL"
"","Cobra"
"Definition","returns an integer number"
"Description","Returns the length of a string (not counting the null terminator or any other of the string's internal structural information). An empty string returns a length of 0."
"Format","Returns","Languages"
"","","Ada"
"","","ALGOL 68"
"","","Ingres, Perl, Pascal, Object Pascal (Delphi), REXX, Seed7, SQL, PL/I"
"","","BASIC, FreeBASIC, Python, Go"
"","","Erlang"
"","","VB"
"","Number of 16-bit UTF-16-encoded blocks","VB .NET, C#, Windows PowerShell, F#"
"","Number of bytes","Ruby"
"","Number of bytes","C, PHP"
"","","C++ (STL)"
"","","Cobra, D, JavaScript"
"","Number of 16-bit UTF-16-encoded blocks","Java"
"","","Scheme"
"","","Common Lisp, ISLISP"
"","","Clojure"
"","","OCaml"
"","","Standard ML"
"","Number of Unicode codepoints","Haskell"
"","","Objective-C ( only)"
"","","Lua"
"","","Smalltalk"
"","","Fortran"
"","","Mathematica"
"or","number of bytes as","Ya"
"or","number of characters and number of bytes, respectively","COBOL"
"Definition","returns string"
"Description","Returns the string in lower case."
"Format","Languages"
"","VB"
"","FreeBASIC"
"","Perl"
"","C"
"","D"
"","C++"
"","Object Pascal (Delphi)"
"","PHP"
"","Seed7"
"","Unix"
"","Python"
"","Ruby"
"","Go"
"","Scheme (R6RS), Common Lisp"
"","Clojure"
"","OCaml"
"","Standard ML"
"","Haskell"
"","Java, JavaScript"
"","Erlang"
"","VB .NET, C#, Windows PowerShell, F#"
"","Objective-C ( only)"
"","Lua"
"","Smalltalk"
"","SQL"
"","PL/I"
"","Mathematica"
"","COBOL"
"","Cobra"
"Definition"
"Format","Languages"
"","Python, Ruby(1.9+)"
"","Erlang"
"","Perl"
"Definition","returns string"
"Description","Returns a string with find occurrences changed to replace."
"Format","Languages"
"","REXX"
"","D"
"","VB"
"","Seed7"
"","VB .NET, C#, F#"
"","PHP"
"","Erlang"
"","Cobra, Python, Java (1.5+)"
"","Java"
"","Ruby"
"","Perl"
"","JavaScript"
"","Unix"
"","Windows PowerShell"
"","OCaml"
"","Objective-C ( only)"
"","Lua"
"","Smalltalk (Squeak, Pharo)"
"","Tcl"
"","Mathematica"
"","Go"
"","COBOL"
"Definition",""
"Description","Reverses the order of the characters in the string."
"Format","Languages"
"","Perl, Haskell"
"","Erlang"
"","PHP"
"","Python"
"","Scheme (SRFI 13)"
"","Common Lisp"
"","Ruby, D (modifies string)"
"","Java"
"","C++ ( only, modifies string)"
"","VB"
"","VB .NET, C#"
"","Standard ML"
"","JavaScript"
"","Lua"
"","Smalltalk"
"","Mathematica"
"","PL/I"
"","COBOL"
"","Cobra"
"Definition","returns integer"
"Description","Returns the position of the start of the last occurrence of substring in string. If the substring is not found most of these routines return an invalid index value – -1 where indexes are 0-based, 0 where they are 1-based – or some value to be interpreted as Boolean FALSE."
"Related","instr"
"Format","Languages","If not found"
"","VB","returns 0"
"","FreeBASIC","returns 0"
"","Perl","returns -1"
"","PHP","returns FALSE"
"","C++ (STL)","returns std::string::npos"
"","D","returns -1"
"","Python","returns -1"
"","Seed7","returns 0"
"","Ruby","returns nil"
"","Go","returns -1"
"","Java, JavaScript","returns -1"
"","VB .NET, C#, Windows PowerShell, F#","returns -1"
"","Common Lisp","returns NIL"
"","Objective-C ( only)","returns NSNotFound"
"","OCaml","raises Not_found"
"","Lua","returns nil"
"","Ada","returns 0"
"","Cobra","returns -1"
"Definition","returns string"
"Description","Returns the right n part of a string. If n is greater than the length of the string then most implementations return the whole string (exceptions exist - see code examples)."
"Format","Languages"
"","Ada"
"","VB"
"","BASIC"
"","FreeBASIC, Ingres"
"(n must not be greater than the length of string)","C"
"","C#"
"","Java"
"","JavaScript"
"","REXX, Erlang"
"","Perl, PHP"
"","Cobra, Python"
"","Scheme (SRFI 13)"
"","Ruby, Ya"
"","D"
"","OCaml"
"","Lua"
"","Smalltalk (Squeak, Pharo)"
"","Mathematica"
"","COBOL"
"Definition"
"Format","Languages"
"","Python, Ruby"
"Definition"
"Format","Languages"
"","Perl"
"","PHP"
"","Python"
"","Javascript, Java, Ruby"
"","Erlang"
"","Go"
"","Scheme (SRFI 13)"
"","VB"
"","VB .NET, C#, F#"
"","Windows PowerShell"
"","OCaml"
"","D"
"","Objective-C ( only)"
"","Object Pascal"
"","Mathematica"
"","Cobra"
"Definition","returns string 
  returns string"
"Description","Returns a substring of string between starting at startpos and endpos, or starting at startpos of length numChars.  The resulting string is truncated if there are fewer than numChars characters beyond the starting point. endpos represents the index after the last character in the substring."
"Format","Languages","/!\ This cell is not defined /!\"
"","ALGOL 68 (changes base index)","/!\ This cell is not defined /!\"
"","Ada (changes base index)","/!\ This cell is not defined /!\"
"","VB","/!\ This cell is not defined /!\"
"","FreeBASIC","/!\ This cell is not defined /!\"
"","BASIC","/!\ This cell is not defined /!\"
"","AWK (changes string), Perl, PHP","/!\ This cell is not defined /!\"
"","REXX","/!\ This cell is not defined /!\"
"","Cobra, Python, Go","/!\ This cell is not defined /!\"
"","Ruby","/!\ This cell is not defined /!\"
"","Seed7","/!\ This cell is not defined /!\"
"","JavaScript","/!\ This cell is not defined /!\"
"","C++ (STL), JavaScript","/!\ This cell is not defined /!\"
"","VB .NET, C#, Windows PowerShell, F#","/!\ This cell is not defined /!\"
"","Java, JavaScript","/!\ This cell is not defined /!\"
"","Object Pascal (Delphi)","/!\ This cell is not defined /!\"
"","Scheme","/!\ This cell is not defined /!\"
"","Common Lisp","/!\ This cell is not defined /!\"
"","ISLISP","/!\ This cell is not defined /!\"
"","OCaml","/!\ This cell is not defined /!\"
"","Standard ML","/!\ This cell is not defined /!\"
"","Erlang","/!\ This cell is not defined /!\"
"","C","/!\ This cell is not defined /!\"
"","D","/!\ This cell is not defined /!\"
"","Haskell","/!\ This cell is not defined /!\"
"","Objective-C ( only)","/!\ This cell is not defined /!\"
"","F#","/!\ This cell is not defined /!\"
"","Lua","/!\ This cell is not defined /!\"
"","Smalltalk","/!\ This cell is not defined /!\"
"","Fortran","/!\ This cell is not defined /!\"
"","SQL","/!\ This cell is not defined /!\"
"","Mathematica","/!\ This cell is not defined /!\"
"","Ya",""
"Definition","returns string"
"Description","Returns the string in upper case."
"Format","Languages"
"","VB"
"","FreeBASIC"
"","AWK (changes string)"
"","Perl"
"","C (operates on one character)"
"","C (string / char array)"
"","D"
"","C++"
"","Object Pascal (Delphi)"
"","Object Pascal (Delphi) (operates on one character)"
"","PHP"
"","Seed7"
"","Unix"
", or
, or","REXX"
"","Python"
"","Ruby"
"","Go"
"","Scheme, Common Lisp"
"","OCaml"
"","Standard ML"
"","Haskell"
"","Java, JavaScript"
"","Erlang"
"","VB .NET, C#, Windows PowerShell, F#"
"","Objective-C ( only)"
"","Lua"
"","Smalltalk"
"","SQL"
"","Mathematica"
"","COBOL"
"","Cobra"
"Format","Languages"
"","C#"
"","Common Lisp"
"","Go"
"","Java"
"","JavaScript"
"","Mathematica"
"","PHP"
"","Python"
"","Cobra"