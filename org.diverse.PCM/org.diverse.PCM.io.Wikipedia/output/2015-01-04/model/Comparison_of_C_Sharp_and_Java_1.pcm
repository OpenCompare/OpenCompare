
{"class":"pcm.PCM@10616464191420401160474","name":"","generated_KMF_ID":"10616464191420401160474","products":[
{"class":"pcm.Product@7009014881420401160474","name":"Definition","generated_KMF_ID":"7009014881420401160474","values":[
{"class":"pcm.Cell@7554869631420401160474","content":"In Java, the enumeration type is a class, and its values are objects (instances) of that class. The only valid values are the ones listed in the enumeration. The enumeration type may declare fields, allowing each individual enumerated value to reference additional data associated uniquely with that specific value. The enumeration type may also declare or override methods, or implement interfaces.","generated_KMF_ID":"7554869631420401160474","feature":["features[21474131481420401160474]"],"interpretation":[]}
,
{"class":"pcm.Cell@6221546911420401160474","content":"Enumeration in C# are implicitly derived from the  type that again is a value type derivative. The value set of a C# enumeration is defined by the underlying type that can be a signed or unsigned integer type of 8, 16, 32 or 64 bits. The enumeration definition defines names for the selected integer values. By default the first name is assigned the value 0 (zero) and the following names are assigned in increments of 1. Any value of the underlying primitive type is a valid value of the enumeration type, though an explicit cast may be needed to assign it.","generated_KMF_ID":"6221546911420401160474","feature":["features[9239350021420401160474]"],"interpretation":[]}
]}
,
{"class":"pcm.Product@530668901420401160474","name":"Combining","generated_KMF_ID":"530668901420401160474","values":[
{"class":"pcm.Cell@2370792741420401160474","content":"C# supports bit-mapped enumerations where an actual value may be a combination of enumerated values bitwise or'ed together. The formatting and parsing methods implicitly defined by the type will attempt to use these values.","generated_KMF_ID":"2370792741420401160474","feature":["features[9239350021420401160474]"],"interpretation":[]}
,
{"class":"pcm.Cell@4898370471420401160474","content":"Java enumeration set and map collections provide functionality to combine multiple enumeration values to a combined value. These special collections allows compiler optimization to minimize the overhead incurred by using collections as the combination mechanism.","generated_KMF_ID":"4898370471420401160474","feature":["features[21474131481420401160474]"],"interpretation":[]}
]}
],"features":[
{"class":"pcm.Feature@9239350021420401160474","name":"C#","generated_KMF_ID":"9239350021420401160474"}
,
{"class":"pcm.Feature@21474131481420401160474","name":"Java","generated_KMF_ID":"21474131481420401160474"}
]}
