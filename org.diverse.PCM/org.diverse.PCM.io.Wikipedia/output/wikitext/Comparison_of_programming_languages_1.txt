{| class="wikitable"
|+ 
|-
|
! Type checking
! Type compatibility and equivalence
! Type expression
! Type safety
|-
! ALGOL 58
| static
| 
| explicit
| safe
|-
! ALGOL 60
| static
| 
| explicit
| safe
|-
! ALGOL 68
| static & tagged union
| structural
| explicit
| safe
|-
! APL
| dynamic
| 
| 
| safe
|-
! ActionScript 3.0
| static
| 
| implicit with optional explicit typing
| safe
|-
! Ada
| static
| nominal
| explicit
| safe
|-
! Aldor
| static
| 
| implicit
| unsafe
|-
! Ateji PX
| static
| nominal
| explicit
| safe
|-
! AutoHotkey
| n/a
| n/a
| n/a
| typeless
|-
! BASIC
| static
| nominal
| explicit
| safe
|-
! BLISS
| n/a
| n/a
| n/a
| typeless
|-
! BeanShell
| dynamic
| nominal
| 
| safe
|-
! Boo
| static with optional dynamic typing
| 
| implicit with optional explicit typing
| safe
|-
! Bro
| static
| nominal
| implicit with optional explicit typing
| safe
|-
! C
| static
| nominal
| explicit
| unsafe
|-
! C#
| static
| nominal
| implicit with optional explicit typing
| unsafe
|-
! C++ (ISO/IEC 14882)
| static
| nominal
| explicit
| unsafe
|-
! COBOL
| static
| nominal
| explicit
| safe
|-
! Clean
| static
| 
| implicit
| safe
|-
! Clojure
| dynamic
| 
| implicit with optional explicit typing
| safe
|-
! ColdFusion (CFML)
| dynamic
| 
| implicit
| safe
|-
! Common Lisp
| dynamic
| 
| implicit with optional explicit typing
| safe
|-
! Curl
| 
| nominal
| 
| safe
|-
! Cython
| dynamic with optional static typing
| nominal (extension types) and structural (Python)
| implicit with optional explicit typing
| safe
|-
! D
| static
| nominal
| explicit
| unsafe
|-
! Dylan
| dynamic
| 
| 
| safe
|-
! Dynace
| dynamic
| 
| implicit
| safe
|-
! Eiffel
| static
| nominal
| 
| safe
|-
! Erlang
| dynamic
| 
| implicit
| safe
|-
! Euphoria
| static, dynamic with objects
| nominal
| explicit, implicit with objects
| safe
|-
! F#
| static
| nominal
| implicit
| safe
|-
! Falcon
| dynamic
| structural
| implicit
| safe
|-
! Forth
| n/a
| n/a
| n/a
| typeless
|-
! Fortran
| static
| nominal
| explicit
| safe
|-
! GLBasic
| static
| nominal
| explicit. Non-explicit declarations available through project options
| safe
|-
! Gambas
| 
| nominal
| explicit
| safe
|-
! Go
| static
| structural
| implicit with optional explicit typing
| safe
|-
! Gosu
| static
| nominal (subclassing) and structural (structural)
| partially implicit (local type inference)
| safe
|-
! Groovy
| dynamic with optional static typing
| 
| implicit with optional explicit typing
| safe
|-
! Harbour
| dynamic
| 
| implicit with optional explicit typing
| safe
|-
! Haskell
| static
| structural
| implicit with optional explicit typing
| safe
|-
! Haxe
| static with optional dynamic typing
| nominal (subclassing) and structural (structural)
| implicit with optional explicit typing
| safe
|-
! ISLISP
| dynamic
| 
| 
| safe
|-
! Io
| dynamic
| 
| implicit
| safe
|-
! J
| dynamic
| 
| 
| safe
|-
! Java
| static
| nominal
| explicit
| safe
|-
! JavaScript
| dynamic
| structural
| implicit
| safe
|-
! Joy
| dynamic
| 
| 
| safe
|-
! Julia
| 
| 
| implicit with optional explicit typing
| safe
|-
! Kotlin
| static
| nominal
| partially implicit (local type inference)
| safe
|-
! LabVIEW
| 
| 
| 
| safe
|-
! Language
| Type checking
| Type compatibility among composites
| Type expression
| Type safety
|-
! Lua
| dynamic
| 
| implicit
| safe
|-
! MATLAB M-code
| dynamic
| 
| 
| safe
|-
! Maple
| dynamic
| 
| 
| safe
|-
! Mathematica
| dynamic
| 
| 
| safe
|-
! Modula-2
| static
| nominal
| explicit
| unsafe
|-
! Modula-3
| static
| structural
| explicit
| unsafe
|-
! OCaml
| static
| structural
| implicit with optional explicit typing
| safe
|-
! Oberon
| static and partially dynamic
| nominal
| explicit
| safe
|-
! Object Pascal (Delphi)
| static
| nominal
| explicit
| safe
|-
! Objective-C
| dynamic with optional static typing
| nominal
| explicit
| safe
|-
! Opa
| static
| structural
| implicit with optional explicit typing
| safe
|-
! Oxygene
| static
| 
| implicit
| unsafe
|-
! Oz
| dynamic
| structural
| implicit
| safe
|-
! PHP
| dynamic
| 
| implicit
| 
|-
! Pascal
| static
| nominal
| explicit
| unsafe
|-
! Perl 5
| dynamic
| 
| implicit
| 
|-
! Perl 6
| dynamic with optional static typing
| 
| partially implicit
| 
|-
! Plus
| static, dynamic (optional)
| structural
| explicit
| safe
|-
! Prolog
| dynamic
| 
| 
| 
|-
! Pure
| dynamic
| 
| 
| 
|-
! Python
| dynamic
| structural
| implicit
| safe
|-
! REBOL
| dynamic
| 
| implicit
| safe
|-
! RPG
| static
| 
| 
| unsafe
|-
! Ruby
| dynamic
| structural
| implicit
| safe
|-
! Rust
| static with optional dynamic typing
| 
| implicit with optional explicit typing
| safe
|-
! S
| dynamic
| 
| 
| 
|-
! S-Lang
| dynamic
| 
| implicit
| safe
|-
! Scala
| static
| nominal (subclassing) and structural (structural)
| partially implicit (local type inference)
| safe
|-
! Scheme
| dynamic (latent)
| 
| implicit
| safe
|-
! Seed7
| static
| nominal
| explicit
| safe
|-
! Simula
| static
| 
| 
| safe
|-
! Smalltalk
| dynamic
| 
| implicit
| safe
|-
! Standard ML
| static
| structural
| implicit with optional explicit typing
| safe
|-
! Tcl
| dynamic
| 
| 
| 
|-
! Visual Basic
| static
| nominal
| implicit with optional explicit typing
| safe
|-
! Visual Basic .NET
| static
| 
| explicit
| unsafe
|-
! Visual Prolog
| static
| nominal
| partially implicit
| safe
|-
! Windows PowerShell
| dynamic
| 
| implicit
| safe
|-
! XL
| static
| nominal
| 
| safe
|-
! Xojo
| static
| nominal
| explicit
| safe
|}